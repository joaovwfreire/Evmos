/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Comp, CompInterface } from "../../contracts/Comp";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611a21380380611a2183398101604081905261002f916100a5565b6001600160a01b03811660008181526001602052604080822080546001600160601b0319166a084595161401484a00000090811790915590517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916100979190815260200190565b60405180910390a3506100d5565b6000602082840312156100b757600080fd5b81516001600160a01b03811681146100ce57600080fd5b9392505050565b61193d806100e46000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806370a08231116100cd578063b4b5ea5711610081578063dd62ed3e11610066578063dd62ed3e146103ad578063e7a324dc146103ed578063f1127ed81461041457600080fd5b8063b4b5ea5714610387578063c3cda5201461039a57600080fd5b80637ecebe00116100b25780637ecebe001461031857806395d89b4114610338578063a9059cbb1461037457600080fd5b806370a08231146102bb578063782d6fe1146102ed57600080fd5b806323b872dd11610124578063587cde1e11610109578063587cde1e1461022a5780635c19a95c1461026b5780636fcfff451461028057600080fd5b806323b872dd146101fd578063313ce5671461021057600080fd5b806306fdde0314610156578063095ea7b31461019357806318160ddd146101b657806320606b70146101d6575b600080fd5b61017d6040518060400160405280600881526020016710dbdb5c1bdd5b9960c21b81525081565b60405161018a91906114f7565b60405180910390f35b6101a66101a1366004611561565b61047c565b604051901515815260200161018a565b6101c86a084595161401484a00000081565b60405190815260200161018a565b6101c87f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6101a661020b36600461158b565b61053f565b610218601281565b60405160ff909116815260200161018a565b6102536102383660046115c7565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161018a565b61027e6102793660046115c7565b610685565b005b6102a661028e3660046115c7565b60046020526000908152604090205463ffffffff1681565b60405163ffffffff909116815260200161018a565b6101c86102c93660046115c7565b6001600160a01b03166000908152600160205260409020546001600160601b031690565b6103006102fb366004611561565b610692565b6040516001600160601b03909116815260200161018a565b6101c86103263660046115c7565b60056020526000908152604090205481565b61017d6040518060400160405280600481526020017f434f4d500000000000000000000000000000000000000000000000000000000081525081565b6101a6610382366004611561565b61093a565b6103006103953660046115c7565b610976565b61027e6103a83660046115e2565b6109f5565b6101c86103bb366004611642565b6001600160a01b039182166000908152602081815260408083209390941682529190915220546001600160601b031690565b6101c87fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b610458610422366004611675565b600360209081526000928352604080842090915290825290205463ffffffff81169064010000000090046001600160601b031682565b6040805163ffffffff90931683526001600160601b0390911660208301520161018a565b600080600019830361049657506001600160601b036104bb565b6104b8836040518060600160405280602581526020016117cd60259139610d45565b90505b336000818152602081815260408083206001600160a01b0389168085529083529281902080546bffffffffffffffffffffffff19166001600160601b03871690811790915590519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6001600160a01b0383166000908152602081815260408083203380855290835281842054825160608101909352602580845291936001600160601b0390911692859261059592889291906117cd90830139610d45565b9050866001600160a01b0316836001600160a01b0316141580156105c257506001600160601b0382811614155b1561066d5760006105ec83836040518060600160405280603d81526020016118a4603d9139610d7d565b6001600160a01b03898116600081815260208181526040808320948a168084529482529182902080546bffffffffffffffffffffffff19166001600160601b0387169081179091559151918252939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b610678878783610dc7565b5060019695505050505050565b61068f3382611022565b50565b600043821061070e5760405162461bcd60e51b815260206004820152602760248201527f436f6d703a3a6765745072696f72566f7465733a206e6f74207965742064657460448201527f65726d696e65640000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6001600160a01b03831660009081526004602052604081205463ffffffff169081900361073f576000915050610539565b6001600160a01b038416600090815260036020526040812084916107646001856116cb565b63ffffffff908116825260208201929092526040016000205416116107d8576001600160a01b0384166000908152600360205260408120906107a76001846116cb565b63ffffffff16815260208101919091526040016000205464010000000090046001600160601b031691506105399050565b6001600160a01b038416600090815260036020908152604080832083805290915290205463ffffffff16831015610813576000915050610539565b6000806108216001846116cb565b90505b8163ffffffff168163ffffffff1611156108f4576000600261084684846116cb565b61085091906116ef565b61085a90836116cb565b6001600160a01b038816600090815260036020908152604080832063ffffffff8581168552908352928190208151808301909252549283168082526401000000009093046001600160601b0316918101919091529192508790036108c8576020015194506105399350505050565b805163ffffffff168711156108df578193506108ed565b6108ea6001836116cb565b92505b5050610824565b506001600160a01b038516600090815260036020908152604080832063ffffffff909416835292905220546001600160601b036401000000009091041691505092915050565b60008061095f836040518060600160405280602681526020016117f260269139610d45565b905061096c338583610dc7565b5060019392505050565b6001600160a01b03811660009081526004602052604081205463ffffffff16806109a15760006109ee565b6001600160a01b0383166000908152600360205260408120906109c56001846116cb565b63ffffffff16815260208101919091526040016000205464010000000090046001600160601b03165b9392505050565b604080518082018252600881526710dbdb5c1bdd5b9960c21b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f561ca898cce9f021c15a441ef41899706e923541cee724530075d1a1144761c781840152466060820152306080808301919091528351808303909101815260a0820184528051908301207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08301526001600160a01b038a1660e08301526101008201899052610120808301899052845180840390910181526101408301909452835193909201929092207f19010000000000000000000000000000000000000000000000000000000000006101608401526101628301829052610182830181905290916000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610b93573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c1c5760405162461bcd60e51b815260206004820152602660248201527f436f6d703a3a64656c656761746542795369673a20696e76616c69642073696760448201527f6e617475726500000000000000000000000000000000000000000000000000006064820152608401610705565b6001600160a01b0381166000908152600560205260408120805491610c4083611720565b919050558914610cb85760405162461bcd60e51b815260206004820152602260248201527f436f6d703a3a64656c656761746542795369673a20696e76616c6964206e6f6e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610705565b87421115610d2e5760405162461bcd60e51b815260206004820152602660248201527f436f6d703a3a64656c656761746542795369673a207369676e6174757265206560448201527f78706972656400000000000000000000000000000000000000000000000000006064820152608401610705565b610d38818b611022565b505050505b505050505050565b6000816c010000000000000000000000008410610d755760405162461bcd60e51b815260040161070591906114f7565b509192915050565b6000836001600160601b0316836001600160601b031611158290610db45760405162461bcd60e51b815260040161070591906114f7565b50610dbf8385611739565b949350505050565b6001600160a01b038316610e435760405162461bcd60e51b815260206004820152603c60248201527f436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747260448201527f616e736665722066726f6d20746865207a65726f2061646472657373000000006064820152608401610705565b6001600160a01b038216610ebf5760405162461bcd60e51b815260206004820152603a60248201527f436f6d703a3a5f7472616e73666572546f6b656e733a2063616e6e6f7420747260448201527f616e7366657220746f20746865207a65726f20616464726573730000000000006064820152608401610705565b6001600160a01b038316600090815260016020908152604091829020548251606081019093526036808452610f0a936001600160601b03909216928592919061179790830139610d7d565b6001600160a01b03848116600090815260016020908152604080832080546bffffffffffffffffffffffff19166001600160601b03968716179055928616825290829020548251606081019093526030808452610f779491909116928592909190611874908301396110c4565b6001600160a01b0383811660008181526001602090815260409182902080546bffffffffffffffffffffffff19166001600160601b03968716179055905193851684529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b0380841660009081526002602052604080822054858416835291205461101d92918216911683611111565b505050565b6001600160a01b03808316600081815260026020818152604080842080546001845282862054949093528787167fffffffffffffffffffffffff000000000000000000000000000000000000000084168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46110be828483611111565b50505050565b6000806110d18486611759565b9050846001600160601b0316816001600160601b0316101583906111085760405162461bcd60e51b815260040161070591906114f7565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561113c57506000816001600160601b0316115b1561101d576001600160a01b03831615611202576001600160a01b03831660009081526004602052604081205463ffffffff16908161117c5760006111c9565b6001600160a01b0385166000908152600360205260408120906111a06001856116cb565b63ffffffff16815260208101919091526040016000205464010000000090046001600160601b03165b905060006111f0828560405180606001604052806028815260200161184c60289139610d7d565b90506111fe868484846112bb565b5050505b6001600160a01b0382161561101d576001600160a01b03821660009081526004602052604081205463ffffffff16908161123d57600061128a565b6001600160a01b0384166000908152600360205260408120906112616001856116cb565b63ffffffff16815260208101919091526040016000205464010000000090046001600160601b03165b905060006112b182856040518060600160405280602781526020016118e1602791396110c4565b9050610d3d858484845b60006112df43604051806060016040528060348152602001611818603491396114d3565b905060008463ffffffff1611801561133957506001600160a01b038516600090815260036020526040812063ffffffff83169161131d6001886116cb565b63ffffffff908116825260208201929092526040016000205416145b156113bd576001600160a01b038516600090815260036020526040812083916113636001886116cb565b63ffffffff168152602081019190915260400160002080546001600160601b0392909216640100000000027fffffffffffffffffffffffffffffffff000000000000000000000000ffffffff90921691909117905561147e565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b166000908152600382528681208b8616825290915294909420925183549451909116640100000000027fffffffffffffffffffffffffffffffff0000000000000000000000000000000090941691161791909117905561144d846001611779565b6001600160a01b0386166000908152600460205260409020805463ffffffff191663ffffffff929092169190911790555b604080516001600160601b038086168252841660208201526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b6000816401000000008410610d755760405162461bcd60e51b815260040161070591905b600060208083528351808285015260005b8181101561152457858101830151858201604001528201611508565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461155c57600080fd5b919050565b6000806040838503121561157457600080fd5b61157d83611545565b946020939093013593505050565b6000806000606084860312156115a057600080fd5b6115a984611545565b92506115b760208501611545565b9150604084013590509250925092565b6000602082840312156115d957600080fd5b6109ee82611545565b60008060008060008060c087890312156115fb57600080fd5b61160487611545565b95506020870135945060408701359350606087013560ff8116811461162857600080fd5b9598949750929560808101359460a0909101359350915050565b6000806040838503121561165557600080fd5b61165e83611545565b915061166c60208401611545565b90509250929050565b6000806040838503121561168857600080fd5b61169183611545565b9150602083013563ffffffff811681146116aa57600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b63ffffffff8281168282160390808211156116e8576116e86116b5565b5092915050565b600063ffffffff8084168061171457634e487b7160e01b600052601260045260246000fd5b92169190910492915050565b600060018201611732576117326116b5565b5060010190565b6001600160601b038281168282160390808211156116e8576116e86116b5565b6001600160601b038181168382160190808211156116e8576116e86116b5565b63ffffffff8181168382160190808211156116e8576116e86116b556fe436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e6365436f6d703a3a617070726f76653a20616d6f756e7420657863656564732039362062697473436f6d703a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473436f6d703a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f7773436f6d703a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f7773436f6d703a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e6365436f6d703a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f7773a264697066735822122060f9c565af5ca8063f3c9fb9b113a7b557e36a99ce16870e83f5e2c25ab6e29b64736f6c63430008110033";

type CompConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Comp__factory extends ContractFactory {
  constructor(...args: CompConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Comp> {
    return super.deploy(account, overrides || {}) as Promise<Comp>;
  }
  override getDeployTransaction(
    account: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(account, overrides || {});
  }
  override attach(address: string): Comp {
    return super.attach(address) as Comp;
  }
  override connect(signer: Signer): Comp__factory {
    return super.connect(signer) as Comp__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompInterface {
    return new utils.Interface(_abi) as CompInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Comp {
    return new Contract(address, _abi, signerOrProvider) as Comp;
  }
}
